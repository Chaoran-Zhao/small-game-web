{"version":3,"sources":["assets/logo.png","pages/nav.js","pages/main.js","pages/tictac.js","data/shrek/1.png","data/shrek/2.png","data/shrek/3.png","data/shrek/4.png","data/shrek/5.png","data/shrek/6.png","data/shrek/7.png","data/shrek/8.png","pages/slido.js","pages/footer.js","App.js","index.js"],"names":["LeftNav","navigate","useNavigate","className","style","textAlign","src","logo","height","width","margin","top","alt","window","innerWidth","map","page","index","onClick","Home","React","localStorage","getItem","XValue","setXValue","reset","setReset","callAPI","a","fetch","method","then","data","json","res","console","log","score","setItem","undefined","alert","removeItem","color","fontSize","Tictac","board","setBoard","player","setPlayer","winPlayer","setWinPlayer","click","numClick","setCell","x","y","currPlayer","newBoard","setWinCount","curLeft","parseInt","checkWin","line","b","c","Array","from","length","row","rowNum","cell","colNum","handleClick","backgroundColor","display","Slido","setRandom","curBlank","setBlank","curMap","setMap","movement","setMove","status","setStatus","active","setActive","check","list","l1","l2","l3","l4","l5","l6","l7","l8","randList","random","Math","floor","indexOf","push","i","temp","generateRandom","move","temp1","Winning","curScore","dict","arrowUpPressed","useKeyPress","arrowDownPressed","arrowLeftPressed","arrowRightPressed","boxShadow","e","includes","border","SolveP","disabled","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","addEventListener","removeEventListener","FooterBar","App","path","element","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wMAAe,MAA0B,iCC4D1BA,MAxDf,WACE,IAAMC,EAAWC,cAKjB,OAAO,mCACL,qBAAKC,UAAU,kCAAf,SACE,sBAAKC,MAAO,CAACC,UAAU,UAAvB,UAAmC,qBAAKF,UAAU,OAAOG,IAAKC,EAAMH,MAAS,CAACI,OAAO,OAAQC,MAAO,OAASC,OAAO,OAAQC,IAAI,OAAQC,IAAI,KACzIC,OAAOC,WAAa,KACnB,mCANM,CAAC,OAAO,SAAU,SAMfC,KAAI,SAACC,EAAMC,GAAP,OACb,mBACAC,QAAS,WACW,SAAd,CAACF,QAAMA,MACTf,EAAS,KAEO,UAAd,CAACe,QAAMA,MACTf,EAAS,UAEO,WAAd,CAACe,QAAMA,MACTf,EAAS,eATb,SAkBGe,GAlBKC,QAqBR,mCA3BO,CAAC,IAAK,KAAM,MA2BTF,KAAI,SAACC,EAAMC,GAAP,OACZ,oBACAC,QAAS,WACS,MAAd,CAACF,QAAMA,MACTf,EAAS,KAEO,OAAd,CAACe,QAAMA,MACTf,EAAS,UAEO,OAAd,CAACe,QAAMA,MACTf,EAAS,eATX,cAiBMe,EAjBN,MAAQC,gB,8BCSLE,MA3Cf,WAAiB,IAAD,EACYC,WAAeC,aAAaC,QAAQ,MADhD,mBACPC,EADO,KACCC,EADD,OAEUJ,YAAe,GAFzB,mBAEPK,EAFO,KAEAC,EAFA,KAIRC,EAAO,uCAAG,sBAAAC,EAAA,sEACRC,MAAM,0DAA0D,CAACC,OAAQ,QAC9EC,MAAK,SAACC,GAAD,OAAQA,EAAKC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAI,WAAWF,GACvBV,EAAUU,EAAIG,OACdhB,aAAaiB,QAAQ,IAAIJ,EAAIG,UANjB,2CAAH,qDA2Bb,OAlBAjB,aAAgB,gBACkBmB,IAA5BlB,aAAaC,QAAQ,MAAgD,OAA5BD,aAAaC,QAAQ,MAChEK,MAED,CAACF,IAQJL,aAAgB,WACD,IAATG,IANJiB,MAAM,oBACNnB,aAAaoB,WAAW,KACxBf,GAAUD,MAOT,CAACF,IAEG,mCACP,qBAAKpB,UAAU,YAAYC,MAAO,CAACC,UAAU,UAA7C,SACE,sBAAKD,MAAO,CAACsC,MAAM,OAAQC,SAAS,OAApC,uDAAsF,uBAAtF,sBACoBpB,EADpB,IAC4B,wBAAQL,QAAS,WAC3CG,aAAaoB,WAAW,KACxBf,GAAUD,IAFgB,2B,OC0EjBmB,MA3Gf,WACE,IADgB,EAIUxB,WAHJ,CAAE,CAAE,GAAI,GAAI,IACZ,CAAE,GAAI,GAAI,IACV,CAAE,GAAI,GAAI,MAHhB,mBAITyB,EAJS,KAIFC,EAJE,OAKY1B,WAAe,KAL3B,mBAKT2B,EALS,KAKDC,EALC,OAMkB5B,WAAe,IANjC,mBAMT6B,EANS,KAMEC,EANF,OAOU9B,WAAe,GAPzB,mBAOT+B,EAPS,KAOFC,EAPE,KAeVC,EAAU,SAACC,EAAGC,GAClB,IAAMC,EAAaT,EACbU,EAAQ,eAAOZ,GACrBY,EAASH,GAAGC,GAAKC,EAEjBV,EAASW,GACTT,EAAqB,MAAXD,EAAgB,IAAK,MAG3BW,EAAc,SAACT,GACnB,GAAiB,MAAdA,EAAkB,CACnB,IAAMU,EAAUtC,aAAaC,QAAQ,KACrCD,aAAaiB,QAAQ,IAAKsB,SAASD,GAAS,KAG1CE,EAAW,WAYf,IAXA,IAWA,MAXqB,CACnB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,IACrB,CAAC,CAAC,EAAG,GAAI,CAAC,EAAG,GAAI,CAAC,EAAG,KAGvB,eAA+B,CAA1B,IAAIC,EAAI,KAAkB,cACXA,EADW,GACtBlC,EADsB,KACnBmC,EADmB,KAChBC,EADgB,KAE7B,GAA0B,KAAtBnB,EAAMjB,EAAE,IAAIA,EAAE,KAAciB,EAAMjB,EAAE,IAAIA,EAAE,MAAQiB,EAAMkB,EAAE,IAAIA,EAAE,KAAOlB,EAAMkB,EAAE,IAAIA,EAAE,MAAQlB,EAAMmB,EAAE,IAAIA,EAAE,IAI7G,OAFAd,EAAwB,MAAXH,EAAiB,IAAM,UACpCW,EAAYX,KA6BZL,EAAQ,CACZ,EAAI,kBACJ,EAAI,oBAGN,OAAO,mCACP,sBAAKvC,UAAU,aAAaC,MAAO,CAACC,UAAU,UAA9C,UACE,qBAAKF,UAAU,aAAf,SACG8D,MAAMC,KAAK,CAACC,OAAQ,IAAIpD,KAAI,SAACqD,EAAKC,GAC/B,OACE,qBAAKlE,UAAU,MAAf,SACG8D,MAAMC,KAAK,CAACC,OAAQ,IAAIpD,KAAI,SAACuD,EAAMC,GAClC,OACA,qBACEpE,UAAU,OACVe,QAAS,kBAlFL,SAACmD,EAAQE,GAC3BlB,EAAQgB,EAAQE,GAChBnB,EAASD,EAAM,GACfhB,QAAQC,IAAIe,GACZU,IA8E6BW,CAAYH,EAAQE,IACnCnE,MAAO,CAACqE,gBAAyC,KAAxB5B,EAAMwB,GAAQE,GAAe7B,EAAMK,GAAU,eAHxE,SAKGF,EAAMwB,GAAQE,eAO7B,sBAAKpE,UAAU,OAAOC,MAAO,CAACsE,QAAiB,IAARvB,GAAyB,KAAZF,EAAiB,OAAS,QAA9E,UAAoG,KAAZA,EAAiB,mBAAG7C,MAAO,CAACuC,SAAS,QAApB,yBAA+C,oBAAGvC,MAAO,CAACuC,SAAS,QAApB,cAA+BM,EAA/B,WAAxJ,IAA6M,uBAC7M,4CAAgBE,EAAhB,mC,OC1GW,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCA1B,MAA0B,8BCW1B,SAASwB,IAAS,IAAD,EACNvD,YAAe,GADT,mBACvBK,EADuB,KAChBC,EADgB,OAEDN,WAAe,IAFd,mBAEdwD,GAFc,aAGDxD,WAAe,MAHd,mBAGvByD,EAHuB,KAGbC,EAHa,OAIL1D,WAAe,IAJV,mBAIvB2D,EAJuB,KAIfC,EAJe,OAKF5D,WAAe,GALb,mBAKvB6D,EALuB,KAKbC,EALa,OAMF9D,YAAe,GANb,mBAMvB+D,EANuB,KAMfC,EANe,OAQFhE,YAAe,GARb,mBAQvBiE,EARuB,KAQfC,EARe,KAUxBC,EAAQ,CAAC,EAAE,EAAE,GACbC,EAAO,CAACC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,EAAGC,GA0BnC5E,aAAgB,YAzBO,WAIrB,IAHA,IAEI6E,EAAW,GACTA,EAAS9B,OAAS,GAAE,CACxB,IAAM+B,EAASC,KAAKC,MAAM,EAAAD,KAAKD,SAHrB,IAIuB,IAA9BD,EAASI,QAAQH,IAClBD,EAASK,KAAKJ,GAMlB,IAAK,IAAMK,KAFXpE,QAAQC,IAAI6D,GACZrB,EAAUqB,GACMA,EACI,IAAdA,EAASM,KACXzB,EAAUlB,SAAS2C,IACnBpE,QAAQC,IAAImE,IAGhB,IAAK,IAAIA,EAAE,EAAGA,EAAE,EAAEA,IAAI,CACpB,IAAMC,EAAOzB,EACbyB,EAAKD,GAAKf,EAAKS,EAASM,GAAG,GAC3BvB,EAAOwB,IAITC,KACA,CAAChF,IAEHL,aAAgB,cACd,CAAC2D,IAEH,IAAM2B,EAAM,SAACzF,GAEX,GADAiE,EAAQD,EAAS,GACbhE,EAAQ,IAAK4D,GAAoB,IAAR5D,EAAoB,IAARA,GAAqB,IAARA,EAAU,CAC9D,IAAMuF,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAO9D,GAKrB,GAJAuF,EAAKvF,GAAL,eAAkB8D,EAAO9D,EAAM,IAC/BuF,EAAKvF,EAAM,GAAK0F,EAChB3B,EAAOwB,GACP1B,EAAS7D,GACN2F,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,SAER,GAAInE,EAAQ,IAAM4D,GAAoB,IAAR5D,EAAoB,IAARA,GAAqB,IAARA,EAAU,CACrEkB,QAAQC,IAAI,cACZ,IAAMoE,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAO9D,GAKrB,GAJAuF,EAAKvF,GAAL,eAAkB8D,EAAO9D,EAAM,IAC/BuF,EAAKvF,EAAM,GAAK0F,EAChB3B,EAAOwB,GACP1B,EAAS7D,GACN2F,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,SAER,GAAInE,EAAQ,IAAM4D,EAAS,CAC/B,IAAM2B,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAO9D,GAKrB,GAJAuF,EAAKvF,GAAL,eAAkB8D,EAAO9D,EAAM,IAC/BuF,EAAKvF,EAAM,GAAK0F,EAChB3B,EAAOwB,GACP1B,EAAS7D,GACN2F,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,SAER,GAAGnE,EAAO,IAAM4D,EAAS,CAC7B,IAAM2B,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAO9D,GAKrB,GAJAuF,EAAKvF,GAAL,eAAkB8D,EAAO9D,EAAM,IAC/BuF,EAAKvF,EAAM,GAAK0F,EAChB3B,EAAOwB,GACP1B,EAAS7D,GACN2F,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,MAKVwB,EAAU,SAACE,GACf,IAAK,IAAMP,KAAKf,EACd,GAAIsB,EAAKP,KAAKf,EAAKe,GACjB,OAAO,EAGX,OAAO,GAWHQ,EAAiBC,EAAY,WAC7BC,EAAmBD,EAAY,aAC/BE,EAAmBF,EAAY,aAC/BG,EAAoBH,EAAY,cA+EtC,OA9EA5F,aAAgB,WACd,IAAa,IAATiE,EAAc,CAChB,GAAI0B,EAAgB,CAClB5E,QAAQC,IAAI,SACZD,QAAQC,IAAIyC,EAAS,GACrB,IAAM2B,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAOF,EAAS,GAK9B,GAJA2B,EAAK3B,EAAS,GAAd,eAAuBE,EAAOF,IAC9B2B,EAAK3B,GAAY8B,EACjB3B,EAAOwB,GACP1B,EAASD,EAAS,GACf+B,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,IAGd,GAAI6B,EAAkB,CACpB9E,QAAQC,IAAI,WACZ,IAAMoE,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAOF,EAAS,GAK9B,GAJA2B,EAAK3B,EAAS,GAAd,eAAuBE,EAAOF,IAC9B2B,EAAK3B,GAAY8B,EACjB3B,EAAOwB,GACP1B,EAASD,EAAS,GACf+B,EAAQJ,GAAM,CACf,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,IAGd,GAAI8B,EAEF,GADA/E,QAAQC,IAAI,WACG,IAAXyC,GAA2B,IAAXA,GAA2B,IAAXA,EAChC1C,QAAQC,IAAI,uBACX,CACD,IAAMoE,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAOF,EAAS,GAK9B,GAJA2B,EAAK3B,EAAS,GAAd,eAAuBE,EAAOF,IAC9B2B,EAAK3B,GAAY8B,EACjB3B,EAAOwB,GACP1B,EAASD,EAAS,GACf+B,EAAQJ,GAAM,CACjB,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,IAKhB,GAAI+B,EAEF,GADAhF,QAAQC,IAAI,YACG,IAAXyC,GAA2B,IAAXA,GAA2B,IAAXA,EAChC1C,QAAQC,IAAI,uBACX,CACD,IAAMoE,EAAI,eAAMzB,GACV4B,EAAQ5B,EAAOF,EAAS,GAK9B,GAJA2B,EAAK3B,EAAS,GAAd,eAAuBE,EAAOF,IAC9B2B,EAAK3B,GAAY8B,EACjB3B,EAAOwB,GACP1B,EAASD,EAAS,GACf+B,EAAQJ,GAAM,CACjB,IAAMK,EAAWxF,aAAaC,QAAQ,KACtCD,aAAaiB,QAAQ,IAAKsB,SAASiD,GAAY,GAC/CrE,MAAM,YACN4C,GAAU,QAOjB,CAAC2B,EAAeE,EAAiBC,EAAiBC,IAG9C,mCAAE,qBAAKhH,UAAU,aAAaC,MAAO,CAACC,UAAU,UAA9C,SACP,sBAAKa,QAAS,WACZoE,GAAWD,IADb,UAEG,qBAAKjF,MAAO,CAACuC,SAAS,QAAtB,gGACD,sBAAKvC,MAAO,CAACK,MAAO,QAASD,OAAQ,QAASE,OAAO,SAAS0G,UAAY/B,EAAkB,8HAAT,QAAyInE,QAAS,WACrOoE,GAAWD,IADX,UAGD,YAAIpB,MAAM,IAAIlD,KAAI,SAACsG,EAAEpG,GAAY,OAChC,mCAAGsE,EAAM+B,SAASrG,GACd,qCAAE,qBAAKb,MAAO,CAACsE,QAAQ,cAAejE,MAAO,QAASD,OAAQ,QAAQ+G,OAAQ,iBAAiBlH,UAAW,UAAxG,SAAgI,qBAAKC,IAAKyE,EAAO9D,GAAQL,IAAI,GACjKM,QAAS,WACPwF,EAAKzF,OAFsHA,GAEhG,0BAC3B,mCAAE,qBAAKb,MAAO,CAACsE,QAAS,cAAejE,MAAO,QAASD,OAAQ,QAAQ+G,OAAQ,iBAAiBlH,UAAW,UAAzG,SAAiI,qBAAKC,IAAKyE,EAAO9D,GAAQL,IAAI,GAClKM,QAAS,WACPwF,EAAKzF,OAFuHA,UARhI,IAWG,uBACL,wBAAQC,QAAS,YA1GJ,WACb,IAAMsF,EAAM,GACZ,IAAK,IAAMD,KAAKf,EACdgB,EAAKD,GAAKf,EAAKe,GAEjBvB,EAAOwB,GAsGLgB,GACApC,GAAU,GACVjD,QAAQC,IAAI+C,GACZD,EAAQ,IACLuC,UAAmB,IAATtC,EALf,oBAMA,wBAAQjE,QAAS,WACfQ,GAAUD,GACVyD,EAAQ,GACRE,GAAU,IACPqC,SAAqB,IAAXxC,IAAyB,IAATE,EAJ/B,oBAlBE,eA4BN,SAAS6B,EAAYU,GAAW,MAEMtG,YAAe,GAFrB,mBAEvBuG,EAFuB,KAEXC,EAFW,KAI9B,SAASC,EAAT,GAA8B,EAAPC,MACTJ,GACVE,GAAc,GAIlB,IAAMG,EAAY,SAAC,GAAY,EAAVD,MACPJ,GACVE,GAAc,IAalB,OATAxG,aAAgB,WAId,OAHAP,OAAOmH,iBAAiB,UAAWH,GACnChH,OAAOmH,iBAAiB,QAASD,GAE1B,WACLlH,OAAOoH,oBAAoB,UAAWJ,GACtChH,OAAOoH,oBAAoB,QAASF,MAErC,IACIJ,EC3QM,SAASO,IAEpB,OAAO,mCACP,qBAAK/H,UAAU,a,YCyBJgI,MAnBf,WACE,OACE,eAAC,IAAD,CAAe/H,MAAO,CAACM,OAAQ,OAA/B,UACE,cAAC,EAAD,IACA,+BACA,eAAC,IAAD,WACE,cAAC,IAAD,CAAO0H,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,SAASC,QAAS,cAAC1D,EAAD,MAC9B,cAAC,IAAD,CAAOyD,KAAK,aAAaC,QAAS,cAAC,EAAD,WAMpC,cAACH,EAAD,QCrBNI,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.7be4f3a1.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.d8811d42.png\";","import * as React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport logo from '../assets/logo.png';\r\nfunction LeftNav() {\r\n  const navigate = useNavigate();\r\n  // const pages = ['Home','Tictac', 'Slido','Tower', 'Snek'];\r\n  // const pages1 = ['H', 'Ti', 'Sl','To', 'S'];\r\n  const pages = ['Home','Tictac', 'Slido'];\r\n  const pages1 = ['H', 'Ti', 'Sl',];\r\n  return <>\r\n    <nav className=\"left sideNav d-flex flex-column\">\r\n      <div style={{textAlign:'center'}} ><img className=\"logo\" src={logo} style = {{height:'50px', width: '50px' , margin:'15px', top:'0px'}} alt=\"\"></img> \r\n        {window.innerWidth > 1400\r\n        ? <>{pages.map((page, index) => (\r\n          <p key={index} \r\n          onClick={()=>{\r\n            if ({page}.page==='Home'){               \r\n              navigate('/');\r\n            }\r\n            if ({page}.page==='Slido'){\r\n              navigate('/slido');\r\n            }\r\n            if ({page}.page==='Tictac'){\r\n              navigate('/tictactoe');\r\n            }\r\n            // if ({page}.page==='Tower'){\r\n            //   navigate('/tower');\r\n            // }\r\n            // if ({page}.page==='Snek'){\r\n            //   navigate('/snek');\r\n            // }\r\n          }} >\r\n            {page} \r\n          </p>\r\n        ))}</>\r\n        : <>{pages1.map((page, index) => (\r\n            <p key={index} \r\n            onClick={()=>{\r\n            if ({page}.page==='H'){               \r\n              navigate('/');\r\n            }\r\n            if ({page}.page==='Sl'){               \r\n              navigate('/slido');\r\n            }\r\n            if ({page}.page==='Ti'){\r\n              navigate('/tictactoe');\r\n            }\r\n            // if ({page}.page==='To'){\r\n            //   navigate('/tower');\r\n            // }\r\n            // if ({page}.page==='S'){\r\n            //   navigate('/snek');\r\n            // }\r\n            }} > {page} </p>\r\n        ))}</>}</div>\r\n    </nav>\r\n  </>\r\n\r\n}\r\nexport default LeftNav;","import * as React from 'react';\r\n\r\nimport '../App.css';\r\nfunction Home() {\r\n  const [XValue, setXValue]=React.useState(localStorage.getItem('X'))\r\n  const [reset, setReset]=React.useState(false)\r\n\r\n  const callAPI = async () =>{\r\n    await fetch('https://cgi.cse.unsw.edu.au/~cs6080/raw/data/score.json',{method: 'GET'})\r\n    .then((data)=>data.json())  \r\n    .then((res)=>{\r\n      console.log('fetching',res);\r\n      setXValue(res.score);\r\n      localStorage.setItem('X',res.score)\r\n    })\r\n  }\r\n  React.useEffect(() => {\r\n    if (localStorage.getItem('X')===undefined || localStorage.getItem('X')===null){\r\n      callAPI()\r\n    }\r\n  }, [reset]);\r\n\r\n  const congrate = () => {\r\n    alert('Congratulations!' );\r\n    localStorage.removeItem('X');\r\n    setReset(!reset);\r\n  }\r\n\r\n  React.useEffect(() => {\r\n    if (XValue===0){\r\n      congrate()\r\n    }\r\n  }, [XValue]);\r\n\r\n  return <>\r\n  <div className='container' style={{textAlign:'center'}}>\r\n    <div style={{color:'blue', fontSize:'2em'}}> Please choose an option from the sidebar.<br />\r\n    Games left to win: {XValue} <button onClick={()=>{\r\n      localStorage.removeItem('X');\r\n      setReset(!reset)\r\n      // localStorage.setItem('X', parseInt(XValue) - 1);\r\n      // setXValue(parseInt(XValue) - 1);\r\n    }}>Reset</button></div>\r\n  </div></>\r\n  \r\n}\r\nexport default Home;","import * as React from 'react';\r\n\r\nimport '../App.css';\r\n//  The code is refer to the tictac example from the tutorial solution\r\nfunction Tictac() {\r\n  const defaultBoard =  [ [ '', '', '', ], \r\n                        [ '', '', '', ],\r\n                        [ '', '', '', ], ]\r\n  const [board, setBoard] = React.useState(defaultBoard); \r\n  const [player, setPlayer] = React.useState('O');\r\n  const [winPlayer, setWinPlayer] = React.useState(''); \r\n  const [click, numClick] = React.useState(0)\r\n\r\n  const handleClick = (rowNum, colNum) => {\r\n    setCell(rowNum, colNum);\r\n    numClick(click+1)\r\n    console.log(click)\r\n    checkWin();\r\n  }\r\n  const setCell = (x, y) => {\r\n    const currPlayer = player;\r\n    const newBoard = {...board}; //[ ... board ]\r\n    newBoard[x][y] = currPlayer; \r\n\r\n    setBoard(newBoard);\r\n    setPlayer(player === 'X'? 'O': 'X');\r\n  }\r\n\r\n  const setWinCount = (winPlayer) => {\r\n    if(winPlayer === 'O'){\r\n      const curLeft = localStorage.getItem('X')\r\n      localStorage.setItem(\"X\", parseInt(curLeft)-1);\r\n    }\r\n  }\r\n  const checkWin = () => {\r\n    const winningLines = [\r\n      [[0, 0], [0, 1], [0, 2]],\r\n      [[1, 0], [1, 1], [1, 2]],\r\n      [[2, 0], [2, 1], [2, 2]],\r\n      [[0, 0], [1, 0], [2, 0]],\r\n      [[0, 1], [1, 1], [2, 1]],\r\n      [[0, 2], [1, 2], [2, 2]],\r\n      [[0, 0], [1, 1], [2, 2]],\r\n      [[0, 2], [1, 1], [2, 0]],\r\n    ]\r\n\r\n    for (let line of winningLines) {\r\n      const [a, b, c] = line;\r\n      if (board[a[0]][a[1]] !== '' && board[a[0]][a[1]] === board[b[0]][b[1]] && board[b[0]][b[1]] === board[c[0]][c[1]]) {\r\n        //Game won\r\n        setWinPlayer(player === 'X' ? 'X' : 'O')\r\n        setWinCount(player);\r\n        return;\r\n      }\r\n    }\r\n\r\n    // all filled\r\n    // let no = Nowin();\r\n    // console.log('no win',no)\r\n    // if (no=== true){\r\n    //   alert('no body win');\r\n    //   setWinPlayer('N')\r\n    // }\r\n  }\r\n  // const Nowin =()=>{\r\n  //   const temp = [...board]\r\n  //   for (let i = 0; i<temp.length;i++){\r\n  //     for (let j = 0; j<temp[i].length; j++){\r\n  //       console.log(i,j,temp)\r\n  //       if (temp[i][j]===''){\r\n  //         return false;\r\n  //       }\r\n  //       if (i===2 && j===2){\r\n  //         return true;\r\n  //       }\r\n  //     } \r\n  //   }\r\n  // }\r\n\r\n\r\n  const color = {\r\n    'X':'rgb(220,220,255',\r\n    'O':'rgb(255,220,220)'\r\n  }\r\n\r\n  return <>\r\n  <div className='container1' style={{textAlign:'center'}}> \r\n    <div className='basicBoard'>\r\n      {Array.from({length: 3}).map((row, rowNum)  => {\r\n          return (\r\n            <div className='row'> \r\n              {Array.from({length: 3}).map((cell, colNum) => {\r\n                return (\r\n                <div \r\n                  className='cell'\r\n                  onClick={() => handleClick(rowNum, colNum)}\r\n                  style={{backgroundColor: board[rowNum][colNum]==='' ? color[player] : 'transparent'}}\r\n                > \r\n                  {board[rowNum][colNum]}\r\n                </div>\r\n                )\r\n              })}\r\n            </div>)\r\n        })}\r\n    </div>\r\n    <div className='info' style={{display: click===9 || winPlayer!=='' ? 'flex' : 'none'}}>{winPlayer==='' ? <p style={{fontSize:'14pt'}}>No one wins</p> : <p style={{fontSize:'14pt'}}> {winPlayer} wins</p> } <br />\r\n    <p >A total of {click} moves were complete</p>\r\n    </div>\r\n  </div>\r\n  </>\r\n}\r\nexport default Tictac;","export default __webpack_public_path__ + \"static/media/1.fc6bde86.png\";","export default __webpack_public_path__ + \"static/media/2.ed7dca6a.png\";","export default __webpack_public_path__ + \"static/media/3.aff7d8e5.png\";","export default __webpack_public_path__ + \"static/media/4.e435c05d.png\";","export default __webpack_public_path__ + \"static/media/5.428142a1.png\";","export default __webpack_public_path__ + \"static/media/6.01949773.png\";","export default __webpack_public_path__ + \"static/media/7.599fb031.png\";","export default __webpack_public_path__ + \"static/media/8.a6b684fd.png\";","import * as React from 'react';\r\nimport l1 from '../data/shrek/1.png';\r\nimport l2 from '../data/shrek/2.png';\r\nimport l3 from '../data/shrek/3.png';\r\nimport l4 from '../data/shrek/4.png';\r\nimport l5 from '../data/shrek/5.png';\r\nimport l6 from '../data/shrek/6.png';\r\nimport l7 from '../data/shrek/7.png';\r\nimport l8 from '../data/shrek/8.png';\r\n\r\n\r\nexport default function Slido() {\r\n  const [reset, setReset]=React.useState(false)\r\n  const [randSet, setRandom] = React.useState([])\r\n  const [curBlank, setBlank] = React.useState(null)\r\n  const [curMap, setMap] = React.useState({})\r\n  const [movement, setMove] = React.useState(0)\r\n  const [status, setStatus] = React.useState(false)\r\n\r\n  const [active, setActive] = React.useState(false)\r\n\r\n  const check = [2,5,8];\r\n  const list = [l1,l2,l3,l4,l5,l6,l7,l8]//0-7\r\n  const generateRandom = () =>{\r\n    const max = 8;\r\n    const min = 0;\r\n    let randList = [];\r\n    while(randList.length < 9){\r\n      const random = Math.floor(Math.random()*(max-min+1)+min);\r\n      if(randList.indexOf(random) === -1 ) {\r\n        randList.push(random);\r\n      }\r\n    }\r\n    // let randList =[1,2,3,4,5,6,7,0,8]\r\n    console.log(randList);\r\n    setRandom(randList);\r\n    for (const i in randList){\r\n      if (randList[i]===0){\r\n        setBlank( parseInt(i));\r\n        console.log(i)\r\n      }\r\n    }\r\n    for (let i=0; i<9;i++){\r\n      const temp = curMap\r\n      temp[i] = list[randList[i]-1]\r\n      setMap(temp)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    generateRandom();\r\n  },[reset])\r\n\r\n  React.useEffect(() => { \r\n  },[curMap])\r\n\r\n  const move =(index)=>{\r\n    setMove(movement+1)\r\n    if (index + 1 ===curBlank && index!==2 & index!==5 && index!==8){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index+1]}\r\n      temp[index+1] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if (index - 1 === curBlank && index!==0 & index!==3 && index!==6){\r\n      console.log('here wrong')\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index-1]}\r\n      temp[index-1] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if (index + 3 === curBlank){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index+3]}\r\n      temp[index+3] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if(index -3 === curBlank){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index-3]}\r\n      temp[index-3] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    } \r\n  }\r\n\r\n  const Winning = (dict)=>{\r\n    for (const i in list){\r\n      if (dict[i]!==list[i]){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const SolveP = ()=>{\r\n    const temp ={}\r\n    for (const i in list){    \r\n      temp[i] = list[i]  \r\n    }\r\n    setMap(temp)\r\n  }\r\n\r\n  const arrowUpPressed = useKeyPress('ArrowUp');\r\n  const arrowDownPressed = useKeyPress('ArrowDown');\r\n  const arrowLeftPressed = useKeyPress('ArrowLeft');\r\n  const arrowRightPressed = useKeyPress('ArrowRight');\r\n  React.useEffect(() => {\r\n    if (active===true){\r\n      if (arrowUpPressed) {\r\n        console.log('keyUP');\r\n        console.log(curBlank+3);\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank+3]\r\n        temp[curBlank+3] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank+3)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n      if (arrowDownPressed) {\r\n        console.log('keyDown')\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank-3]\r\n        temp[curBlank-3] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank-3)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n      if (arrowLeftPressed) {\r\n        console.log('keyLeft')\r\n        if (curBlank===2 || curBlank===5 || curBlank===8){\r\n            console.log('should not move')\r\n        }else{\r\n            const temp ={...curMap}\r\n            const temp1 = curMap[curBlank+1]\r\n            temp[curBlank+1] = {...curMap[curBlank]}\r\n            temp[curBlank] = temp1\r\n            setMap(temp)\r\n            setBlank(curBlank+1)\r\n            if(Winning(temp)){\r\n            const curScore = localStorage.getItem('X')\r\n            localStorage.setItem('X', parseInt(curScore) + 1)\r\n            alert('Correct!')\r\n            setStatus(true)\r\n            }\r\n        }\r\n        \r\n      }\r\n      if (arrowRightPressed) {\r\n        console.log('keyRight')\r\n        if (curBlank===0 || curBlank===3 || curBlank===6){\r\n            console.log('should not move')\r\n        }else{\r\n            const temp ={...curMap}\r\n            const temp1 = curMap[curBlank-1]\r\n            temp[curBlank-1] = {...curMap[curBlank]}\r\n            temp[curBlank] = temp1\r\n            setMap(temp)\r\n            setBlank(curBlank-1)\r\n            if(Winning(temp)){\r\n            const curScore = localStorage.getItem('X')\r\n            localStorage.setItem('X', parseInt(curScore) + 1)\r\n            alert('Correct!')\r\n            setStatus(true)\r\n            }\r\n        }\r\n        \r\n      }\r\n    }\r\n    \r\n  }, [arrowUpPressed,arrowDownPressed,arrowLeftPressed,arrowRightPressed]);\r\n\r\n\r\n  return <><div className='container1' style={{textAlign:'center'}}>\r\n    <div onClick={()=>{\r\n      setActive(!active)\r\n    }}><div style={{fontSize:'2rem'}}>Click on the image pieces or click on the plate then use the arrow key to move it!</div>\r\n      <div style={{width: '460px', height: '460px', margin:'0 auto',boxShadow: !active ? 'none' : ' 0 13px 40px -5px hsla(240, 30.1%, 28%, 0.12), 0 8px 32px -8px hsla(0, 0%, 0%, 0.5), 0 -6px 64px -6px hsla(0, 0%, 0%, 0.05)'}} onClick={()=>{\r\n      setActive(!active)\r\n    }}>\r\n    {[...Array(9)].map((e,index) => { return (\r\n      <>{check.includes(index) \r\n        ? <><div style={{display:'inline-flex', width: '150px', height: '150px',border: '1px solid #333',textAlign: 'center',}} key={index}><img src={curMap[index]} alt=\"\" \r\n        onClick={()=>{\r\n          move(index);}}></img></div><br /></> \r\n        : <><div style={{display: 'inline-flex', width: '150px', height: '150px',border: '1px solid #333',textAlign: 'center',}} key={index}><img src={curMap[index]} alt=\"\"\r\n        onClick={()=>{\r\n          move(index);}}></img></div></>}</>\r\n    )})} <br />\r\n    <button onClick={()=>{\r\n      SolveP();\r\n      setStatus(true);\r\n      console.log(status)\r\n      setMove(1)\r\n      }} disabled={status===true ? true : false}> Solve</button>\r\n    <button onClick={()=>{\r\n      setReset(!reset); \r\n      setMove(0)\r\n      setStatus(false);   \r\n      }} disabled={movement===0 && status!==true ? true : false}> Reset</button>  </div>\r\n      </div>\r\n  </div></>\r\n\r\n}\r\n\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = React.useState(false);\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n  // Add event listeners\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  return keyPressed;\r\n}","import * as React from 'react';\r\n\r\nexport default function FooterBar() {\r\n\r\n    return <>\r\n    <div className='footer'></div>\r\n    </>\r\n\r\n}","import './App.css';\r\nimport React from 'react';\r\nimport Nav from \"./pages/nav\"\r\nimport Home from \"./pages/main\"\r\nimport Tictac from \"./pages/tictac\"\r\nimport Slido from './pages/slido';\r\nimport Tower from \"./pages/tower\"\r\nimport Snek from \"./pages/snek\"\r\nimport FooterBar from \"./pages/footer\"\r\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  return (\r\n    <BrowserRouter style={{margin: '0px'}}>\r\n      <Nav />\r\n      <main>\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home />}/>\r\n        <Route path=\"/slido\" element={<Slido />}/>\r\n        <Route path=\"/tictactoe\" element={<Tictac />}/>\r\n        {/* <Route path=\"/tower\" element={<Tower/>}/>\r\n        <Route path=\"/snek\" element={<Snek />}/> */}\r\n      </Routes>  \r\n      </main>\r\n      \r\n      <FooterBar />\r\n    </BrowserRouter>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}