{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\23703\\\\OneDrive\\\\\\u684C\\u9762\\\\exam\\\\src\\\\pages\\\\tictac.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport '../App.css'; //  The code is refer to the tictac example from the tutorial solution\n\nfunction Tictac() {\n  _s();\n\n  const defaultBoard = [['', '', ''], ['', '', ''], ['', '', '']];\n  const [board, setBoard] = React.useState(defaultBoard);\n  const [player, setPlayer] = React.useState('O');\n  const [winPlayer, setWinPlayer] = React.useState('');\n  const [click, numClick] = React.useState(0);\n\n  const handleClick = (rowNum, colNum) => {\n    setCell(rowNum, colNum);\n    numClick(click + 1);\n    checkWin();\n  };\n\n  const setCell = (x, y) => {\n    const currPlayer = player;\n    const newBoard = { ...board\n    }; //[ ... board ]\n\n    newBoard[x][y] = currPlayer;\n    setBoard(newBoard);\n    setPlayer(player === 'X' ? 'O' : 'X');\n  };\n\n  const setWinCount = winPlayer => {\n    if (winPlayer === 'O') {\n      const curLeft = localStorage.getItem('X');\n      localStorage.setItem(\"X\", parseInt(curLeft) - 1);\n    }\n  };\n\n  const checkWin = () => {\n    const winningLines = [[[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]], [[0, 0], [1, 0], [2, 0]], [[0, 1], [1, 1], [2, 1]], [[0, 2], [1, 2], [2, 2]], [[0, 0], [1, 1], [2, 2]], [[0, 2], [1, 1], [2, 0]]];\n\n    for (let line of winningLines) {\n      const [a, b, c] = line;\n\n      if (board[a[0]][a[1]] !== '' && board[a[0]][a[1]] === board[b[0]][b[1]] && board[b[0]][b[1]] === board[c[0]][c[1]]) {\n        //Game won\n        setWinPlayer(player === 'X' ? 'X' : 'O');\n        setWinCount(player);\n        alert(\"won le\");\n        return;\n      }\n    } // all filled\n    // let no = Nowin();\n    // console.log('no win',no)\n    // if (no=== true){\n    //   alert('no body win');\n    //   setWinPlayer('N')\n    // }\n\n  }; // const Nowin =()=>{\n  //   const temp = [...board]\n  //   for (let i = 0; i<temp.length;i++){\n  //     for (let j = 0; j<temp[i].length; j++){\n  //       console.log(i,j,temp)\n  //       if (temp[i][j]===''){\n  //         return false;\n  //       }\n  //       if (i===2 && j===2){\n  //         return true;\n  //       }\n  //     } \n  //   }\n  // }\n\n\n  const color = {\n    'X': 'rgb(220,220,255',\n    'O': 'rgb(255,220,220)'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container1\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basicBoard\",\n        children: Array.from({\n          length: 3\n        }).map((row, rowNum) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: Array.from({\n              length: 3\n            }).map((cell, colNum) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cell\",\n                onClick: () => handleClick(rowNum, colNum),\n                style: {\n                  backgroundColor: board[rowNum][colNum] === '' ? color[player] : 'transparent'\n                },\n                children: board[rowNum][colNum]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        style: {\n          display: click === 9 ? 'none' : 'flex'\n        },\n        children: [winPlayer === '' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14pt'\n          },\n          children: \"No one wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 92\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14pt'\n          },\n          children: [\" \", winPlayer, \" wins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 139\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 192\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A total of X moves were complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tictac, \"OT0DCxr2dFMZ43+1gLLqY4Oe6IQ=\");\n\n_c = Tictac;\nexport default Tictac;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tictac\");","map":{"version":3,"sources":["C:/Users/23703/OneDrive/桌面/exam/src/pages/tictac.js"],"names":["React","Tictac","defaultBoard","board","setBoard","useState","player","setPlayer","winPlayer","setWinPlayer","click","numClick","handleClick","rowNum","colNum","setCell","checkWin","x","y","currPlayer","newBoard","setWinCount","curLeft","localStorage","getItem","setItem","parseInt","winningLines","line","a","b","c","alert","color","textAlign","Array","from","length","map","row","cell","backgroundColor","display","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport '../App.css';\r\n//  The code is refer to the tictac example from the tutorial solution\r\nfunction Tictac() {\r\n  const defaultBoard =  [ [ '', '', '', ], \r\n                        [ '', '', '', ],\r\n                        [ '', '', '', ], ]\r\n  const [board, setBoard] = React.useState(defaultBoard); \r\n  const [player, setPlayer] = React.useState('O');\r\n  const [winPlayer, setWinPlayer] = React.useState(''); \r\n  const [click, numClick] = React.useState(0)\r\n\r\n  const handleClick = (rowNum, colNum) => {\r\n    setCell(rowNum, colNum);\r\n    numClick(click+1)\r\n    checkWin();\r\n  }\r\n  const setCell = (x, y) => {\r\n    const currPlayer = player;\r\n    const newBoard = {...board}; //[ ... board ]\r\n    newBoard[x][y] = currPlayer; \r\n\r\n    setBoard(newBoard);\r\n    setPlayer(player === 'X'? 'O': 'X');\r\n  }\r\n\r\n  const setWinCount = (winPlayer) => {\r\n    if(winPlayer === 'O'){\r\n      const curLeft = localStorage.getItem('X')\r\n      localStorage.setItem(\"X\", parseInt(curLeft)-1);\r\n    }\r\n  }\r\n  const checkWin = () => {\r\n    const winningLines = [\r\n      [[0, 0], [0, 1], [0, 2]],\r\n      [[1, 0], [1, 1], [1, 2]],\r\n      [[2, 0], [2, 1], [2, 2]],\r\n      [[0, 0], [1, 0], [2, 0]],\r\n      [[0, 1], [1, 1], [2, 1]],\r\n      [[0, 2], [1, 2], [2, 2]],\r\n      [[0, 0], [1, 1], [2, 2]],\r\n      [[0, 2], [1, 1], [2, 0]],\r\n    ]\r\n\r\n    for (let line of winningLines) {\r\n      const [a, b, c] = line;\r\n      if (board[a[0]][a[1]] !== '' && board[a[0]][a[1]] === board[b[0]][b[1]] && board[b[0]][b[1]] === board[c[0]][c[1]]) {\r\n        //Game won\r\n        setWinPlayer(player === 'X' ? 'X' : 'O')\r\n        setWinCount(player);\r\n        alert(\"won le\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    // all filled\r\n    // let no = Nowin();\r\n    // console.log('no win',no)\r\n    // if (no=== true){\r\n    //   alert('no body win');\r\n    //   setWinPlayer('N')\r\n    // }\r\n  }\r\n  // const Nowin =()=>{\r\n  //   const temp = [...board]\r\n  //   for (let i = 0; i<temp.length;i++){\r\n  //     for (let j = 0; j<temp[i].length; j++){\r\n  //       console.log(i,j,temp)\r\n  //       if (temp[i][j]===''){\r\n  //         return false;\r\n  //       }\r\n  //       if (i===2 && j===2){\r\n  //         return true;\r\n  //       }\r\n  //     } \r\n  //   }\r\n  // }\r\n\r\n\r\n  const color = {\r\n    'X':'rgb(220,220,255',\r\n    'O':'rgb(255,220,220)'\r\n  }\r\n\r\n  return <>\r\n  <div className='container1' style={{textAlign:'center'}}> \r\n    <div className='basicBoard'>\r\n      {Array.from({length: 3}).map((row, rowNum)  => {\r\n          return (\r\n            <div className='row'> \r\n              {Array.from({length: 3}).map((cell, colNum) => {\r\n                return (\r\n                <div \r\n                  className='cell'\r\n                  onClick={() => handleClick(rowNum, colNum)}\r\n                  style={{backgroundColor: board[rowNum][colNum]==='' ? color[player] : 'transparent'}}\r\n                > \r\n                  {board[rowNum][colNum]}\r\n                </div>\r\n                )\r\n              })}\r\n            </div>)\r\n        })}\r\n    </div>\r\n    <div className='info' style={{display: click===9 ? 'none' : 'flex'}}>{winPlayer==='' ? <p style={{fontSize:'14pt'}}>No one wins</p> : <p style={{fontSize:'14pt'}}> {winPlayer} wins</p> } <br />\r\n    <p >A total of X moves were complete</p>\r\n    </div>\r\n  </div>\r\n  </>\r\n}\r\nexport default Tictac;"]},"metadata":{},"sourceType":"module"}