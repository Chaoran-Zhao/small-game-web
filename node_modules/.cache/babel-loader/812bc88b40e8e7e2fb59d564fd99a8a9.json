{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\23703\\\\OneDrive\\\\\\u684C\\u9762\\\\exam\\\\src\\\\pages\\\\slido.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport * as React from 'react';\nimport l1 from '../data/shrek/1.png';\nimport l2 from '../data/shrek/2.png';\nimport l3 from '../data/shrek/3.png';\nimport l4 from '../data/shrek/4.png';\nimport l5 from '../data/shrek/5.png';\nimport l6 from '../data/shrek/6.png';\nimport l7 from '../data/shrek/7.png';\nimport l8 from '../data/shrek/8.png';\nexport default function Slido() {\n  _s();\n\n  const [reset, setReset] = React.useState(false);\n  const [randSet, setRandom] = React.useState([]);\n  const [curBlank, setBlank] = React.useState(null);\n  const [curMap, setMap] = React.useState({});\n  const [movement, setMove] = React.useState(0);\n  const [status, setStatus] = React.useState(false);\n  const [active, setActive] = React.useState(false);\n  const check = [2, 5, 8];\n  const list = [l1, l2, l3, l4, l5, l6, l7, l8]; //0-7\n\n  const generateRandom = () => {\n    const max = 8;\n    const min = 0;\n    let randList = [];\n\n    while (randList.length < 9) {\n      const random = Math.floor(Math.random() * (max - min + 1) + min);\n\n      if (randList.indexOf(random) === -1) {\n        randList.push(random);\n      }\n    } // let randList =[1,2,3,4,5,6,7,0,8]\n\n\n    console.log(randList);\n    setRandom(randList);\n\n    for (const i in randList) {\n      if (randList[i] === 0) {\n        setBlank(parseInt(i));\n        console.log(i);\n      }\n    }\n\n    for (let i = 0; i < 9; i++) {\n      const temp = curMap;\n      temp[i] = list[randList[i] - 1];\n      setMap(temp);\n    }\n  };\n\n  React.useEffect(() => {\n    generateRandom();\n  }, [reset]);\n  React.useEffect(() => {}, [curMap]);\n\n  const move = index => {\n    setMove(movement + 1);\n\n    if (index + 1 === curBlank && index !== 2 & index !== 5 && index !== 8) {\n      const temp = { ...curMap\n      };\n      const temp1 = curMap[index];\n      temp[index] = { ...curMap[index + 1]\n      };\n      temp[index + 1] = temp1;\n      setMap(temp);\n      setBlank(index);\n\n      if (Winning(temp)) {\n        const curScore = localStorage.getItem('X');\n        localStorage.setItem('X', parseInt(curScore) + 1);\n        alert('Correct!');\n        setStatus(true);\n      }\n    } else if (index - 1 === curBlank && index !== 0 & index !== 3 && index !== 6) {\n      const temp = { ...curMap\n      };\n      const temp1 = curMap[index];\n      temp[index] = { ...curMap[index - 1]\n      };\n      temp[index - 1] = temp1;\n      setMap(temp);\n      setBlank(index);\n\n      if (Winning(temp)) {\n        const curScore = localStorage.getItem('X');\n        localStorage.setItem('X', parseInt(curScore) + 1);\n        alert('Correct!');\n        setStatus(true);\n      }\n    } else if (index + 3 === curBlank) {\n      const temp = { ...curMap\n      };\n      const temp1 = curMap[index];\n      temp[index] = { ...curMap[index + 3]\n      };\n      temp[index + 3] = temp1;\n      setMap(temp);\n      setBlank(index);\n\n      if (Winning(temp)) {\n        const curScore = localStorage.getItem('X');\n        localStorage.setItem('X', parseInt(curScore) + 1);\n        alert('Correct!');\n        setStatus(true);\n      }\n    } else if (index - 3 === curBlank) {\n      const temp = { ...curMap\n      };\n      const temp1 = curMap[index];\n      temp[index] = { ...curMap[index - 3]\n      };\n      temp[index - 3] = temp1;\n      setMap(temp);\n      setBlank(index);\n\n      if (Winning(temp)) {\n        const curScore = localStorage.getItem('X');\n        localStorage.setItem('X', parseInt(curScore) + 1);\n        alert('Correct!');\n        setStatus(true);\n      }\n    }\n  };\n\n  const Winning = dict => {\n    for (const i in list) {\n      if (dict[i] !== list[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n\n  const SolveP = () => {\n    const temp = {};\n\n    for (const i in list) {\n      temp[i] = list[i];\n    }\n\n    setMap(temp);\n  };\n\n  const arrowUpPressed = useKeyPress('ArrowUp');\n  const arrowDownPressed = useKeyPress('ArrowDown');\n  const arrowLeftPressed = useKeyPress('ArrowLeft');\n  const arrowRightPressed = useKeyPress('ArrowRight');\n  React.useEffect(() => {\n    if (active === true) {\n      if (arrowUpPressed) {\n        console.log('keyUP');\n        console.log(curBlank + 3);\n        const temp = { ...curMap\n        };\n        const temp1 = curMap[curBlank + 3];\n        temp[curBlank + 3] = { ...curMap[curBlank]\n        };\n        temp[curBlank] = temp1;\n        setMap(temp);\n        setBlank(curBlank + 3);\n\n        if (Winning(temp)) {\n          const curScore = localStorage.getItem('X');\n          localStorage.setItem('X', parseInt(curScore) + 1);\n          alert('Correct!');\n          setStatus(true);\n        }\n      }\n\n      if (arrowDownPressed) {\n        console.log('keyDown');\n        const temp = { ...curMap\n        };\n        const temp1 = curMap[curBlank - 3];\n        temp[curBlank - 3] = { ...curMap[curBlank]\n        };\n        temp[curBlank] = temp1;\n        setMap(temp);\n        setBlank(curBlank - 3);\n\n        if (Winning(temp)) {\n          const curScore = localStorage.getItem('X');\n          localStorage.setItem('X', parseInt(curScore) + 1);\n          alert('Correct!');\n          setStatus(true);\n        }\n      }\n\n      if (arrowLeftPressed) {\n        console.log('keyLeft');\n        const temp = { ...curMap\n        };\n        const temp1 = curMap[curBlank + 1];\n        temp[curBlank + 1] = { ...curMap[curBlank]\n        };\n        temp[curBlank] = temp1;\n        setMap(temp);\n        setBlank(curBlank + 1);\n\n        if (Winning(temp)) {\n          const curScore = localStorage.getItem('X');\n          localStorage.setItem('X', parseInt(curScore) + 1);\n          alert('Correct!');\n          setStatus(true);\n        }\n      }\n\n      if (arrowRightPressed) {\n        console.log('keyRight');\n        const temp = { ...curMap\n        };\n        const temp1 = curMap[curBlank - 1];\n        temp[curBlank - 1] = { ...curMap[curBlank]\n        };\n        temp[curBlank] = temp1;\n        setMap(temp);\n        setBlank(curBlank - 1);\n\n        if (Winning(temp)) {\n          const curScore = localStorage.getItem('X');\n          localStorage.setItem('X', parseInt(curScore) + 1);\n          alert('Correct!');\n          setStatus(true);\n        }\n      }\n    }\n  }, [arrowUpPressed, arrowDownPressed, arrowLeftPressed, arrowRightPressed]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      style: {\n        textAlign: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '460px',\n          height: '480px',\n          margin: '0 auto'\n        },\n        onClick: () => {\n          setActive(!active);\n        },\n        children: [[...Array(9)].map((e, index) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: check.includes(index) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'inline-flex',\n                  width: '150px',\n                  height: '150px',\n                  border: '1px solid #333',\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: curMap[index],\n                  alt: \"\",\n                  onClick: () => {\n                    move(index);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 212,\n                  columnNumber: 141\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 38\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  display: 'inline-flex',\n                  width: '150px',\n                  height: '150px',\n                  border: '1px solid #333',\n                  textAlign: 'center'\n                },\n                children: /*#__PURE__*/_jsxDEV(\"img\", {\n                  src: curMap[index],\n                  alt: \"\",\n                  onClick: () => {\n                    move(index);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 215,\n                  columnNumber: 142\n                }, this)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 13\n              }, this)\n            }, void 0, false)\n          }, void 0, false);\n        }), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 10\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            SolveP();\n            setStatus(true);\n            console.log(status);\n            setMove(1);\n          },\n          disabled: status === true ? true : false,\n          children: \" Solve\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            setReset(!reset);\n            setMove(0);\n            setStatus(false);\n          },\n          disabled: movement === 0 && status !== true ? true : false,\n          children: \" Reset\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 5\n        }, this), \"  \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 12\n    }, this)\n  }, void 0, false);\n}\n\n_s(Slido, \"/bha6Qk0o8ysLwJqVfIbbxwjt2o=\", false, function () {\n  return [useKeyPress, useKeyPress, useKeyPress, useKeyPress];\n});\n\n_c = Slido;\n\nfunction useKeyPress(targetKey) {\n  _s2();\n\n  // State for keeping track of whether key is pressed\n  const [keyPressed, setKeyPressed] = React.useState(false); // If pressed key is our target key then set to true\n\n  function downHandler({\n    key\n  }) {\n    if (key === targetKey) {\n      setKeyPressed(true);\n    }\n  } // If released key is our target key then set to false\n\n\n  const upHandler = ({\n    key\n  }) => {\n    if (key === targetKey) {\n      setKeyPressed(false);\n    }\n  }; // Add event listeners\n\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", downHandler);\n    window.addEventListener(\"keyup\", upHandler); // Remove event listeners on cleanup\n\n    return () => {\n      window.removeEventListener(\"keydown\", downHandler);\n      window.removeEventListener(\"keyup\", upHandler);\n    };\n  }, []); // Empty array ensures that effect is only run on mount and unmount\n\n  return keyPressed;\n}\n\n_s2(useKeyPress, \"vmDSD7h68k9Z7B48/eX82jyokKU=\");\n\nvar _c;\n\n$RefreshReg$(_c, \"Slido\");","map":{"version":3,"sources":["C:/Users/23703/OneDrive/桌面/exam/src/pages/slido.js"],"names":["React","l1","l2","l3","l4","l5","l6","l7","l8","Slido","reset","setReset","useState","randSet","setRandom","curBlank","setBlank","curMap","setMap","movement","setMove","status","setStatus","active","setActive","check","list","generateRandom","max","min","randList","length","random","Math","floor","indexOf","push","console","log","i","parseInt","temp","useEffect","move","index","temp1","Winning","curScore","localStorage","getItem","setItem","alert","dict","SolveP","arrowUpPressed","useKeyPress","arrowDownPressed","arrowLeftPressed","arrowRightPressed","textAlign","width","height","margin","Array","map","e","includes","display","border","targetKey","keyPressed","setKeyPressed","downHandler","key","upHandler","window","addEventListener","removeEventListener"],"mappings":"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","sourcesContent":["\r\nimport * as React from 'react';\r\nimport l1 from '../data/shrek/1.png';\r\nimport l2 from '../data/shrek/2.png';\r\nimport l3 from '../data/shrek/3.png';\r\nimport l4 from '../data/shrek/4.png';\r\nimport l5 from '../data/shrek/5.png';\r\nimport l6 from '../data/shrek/6.png';\r\nimport l7 from '../data/shrek/7.png';\r\nimport l8 from '../data/shrek/8.png';\r\n\r\n\r\nexport default function Slido() {\r\n  const [reset, setReset]=React.useState(false)\r\n  const [randSet, setRandom] = React.useState([])\r\n  const [curBlank, setBlank] = React.useState(null)\r\n  const [curMap, setMap] = React.useState({})\r\n  const [movement, setMove] = React.useState(0)\r\n  const [status, setStatus] = React.useState(false)\r\n\r\n  const [active, setActive] = React.useState(false)\r\n\r\n  const check = [2,5,8];\r\n  const list = [l1,l2,l3,l4,l5,l6,l7,l8]//0-7\r\n  const generateRandom = () =>{\r\n    const max = 8;\r\n    const min = 0;\r\n    let randList = [];\r\n    while(randList.length < 9){\r\n      const random = Math.floor(Math.random()*(max-min+1)+min);\r\n      if(randList.indexOf(random) === -1 ) {\r\n        randList.push(random);\r\n      }\r\n    }\r\n    // let randList =[1,2,3,4,5,6,7,0,8]\r\n    console.log(randList);\r\n    setRandom(randList);\r\n    for (const i in randList){\r\n      if (randList[i]===0){\r\n        setBlank( parseInt(i));\r\n        console.log(i)\r\n      }\r\n    }\r\n    for (let i=0; i<9;i++){\r\n      const temp = curMap\r\n      temp[i] = list[randList[i]-1]\r\n      setMap(temp)\r\n    }\r\n  }\r\n  React.useEffect(() => {\r\n    generateRandom();\r\n  },[reset])\r\n\r\n  React.useEffect(() => { \r\n  },[curMap])\r\n\r\n  const move =(index)=>{\r\n    setMove(movement+1)\r\n    if (index + 1 ===curBlank && index!==2 & index!==5 && index!==8){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index+1]}\r\n      temp[index+1] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if (index - 1 === curBlank && index!==0 & index!==3 && index!==6){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index-1]}\r\n      temp[index-1] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if (index + 3 === curBlank){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index+3]}\r\n      temp[index+3] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    }else if(index -3 === curBlank){\r\n      const temp ={...curMap}\r\n      const temp1 = curMap[index]\r\n      temp[index] = {...curMap[index-3]}\r\n      temp[index-3] = temp1\r\n      setMap(temp)\r\n      setBlank(index)\r\n      if(Winning(temp)){\r\n        const curScore = localStorage.getItem('X')\r\n        localStorage.setItem('X', parseInt(curScore) + 1)\r\n        alert('Correct!')\r\n        setStatus(true)\r\n      }\r\n    } \r\n  }\r\n\r\n  const Winning = (dict)=>{\r\n    for (const i in list){\r\n      if (dict[i]!==list[i]){\r\n        return false;\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n\r\n  const SolveP = ()=>{\r\n    const temp ={}\r\n    for (const i in list){    \r\n      temp[i] = list[i]  \r\n    }\r\n    setMap(temp)\r\n  }\r\n\r\n  const arrowUpPressed = useKeyPress('ArrowUp');\r\n  const arrowDownPressed = useKeyPress('ArrowDown');\r\n  const arrowLeftPressed = useKeyPress('ArrowLeft');\r\n  const arrowRightPressed = useKeyPress('ArrowRight');\r\n  React.useEffect(() => {\r\n    if (active===true){\r\n      if (arrowUpPressed) {\r\n        console.log('keyUP');\r\n        console.log(curBlank+3);\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank+3]\r\n        temp[curBlank+3] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank+3)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n      if (arrowDownPressed) {\r\n        console.log('keyDown')\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank-3]\r\n        temp[curBlank-3] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank-3)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n      if (arrowLeftPressed) {\r\n        console.log('keyLeft')\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank+1]\r\n        temp[curBlank+1] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank+1)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n      if (arrowRightPressed) {\r\n        console.log('keyRight')\r\n        const temp ={...curMap}\r\n        const temp1 = curMap[curBlank-1]\r\n        temp[curBlank-1] = {...curMap[curBlank]}\r\n        temp[curBlank] = temp1\r\n        setMap(temp)\r\n        setBlank(curBlank-1)\r\n        if(Winning(temp)){\r\n          const curScore = localStorage.getItem('X')\r\n          localStorage.setItem('X', parseInt(curScore) + 1)\r\n          alert('Correct!')\r\n          setStatus(true)\r\n        }\r\n      }\r\n    }\r\n    \r\n  }, [arrowUpPressed,arrowDownPressed,arrowLeftPressed,arrowRightPressed]);\r\n\r\n\r\n  return <><div className='container' style={{textAlign:'center'}}>\r\n    {/* <div style={{border: active ? '2px solid red' : '2px solid blue', width: '460px', height: '480px', margin:'0 auto'}} onClick={()=>{\r\n      setActive(!active)\r\n    }}> */}\r\n      <div style={{width: '460px', height: '480px', margin:'0 auto'}} onClick={()=>{\r\n      setActive(!active)\r\n    }}>\r\n    {[...Array(9)].map((e,index) => { return (\r\n      <>{check.includes(index) \r\n        ? <><div style={{display:'inline-flex', width: '150px', height: '150px',border: '1px solid #333',textAlign: 'center',}} key={index}><img src={curMap[index]} alt=\"\" \r\n        onClick={()=>{\r\n          move(index);}}></img></div><br /></> \r\n        : <><div style={{display: 'inline-flex', width: '150px', height: '150px',border: '1px solid #333',textAlign: 'center',}} key={index}><img src={curMap[index]} alt=\"\"\r\n        onClick={()=>{\r\n          move(index);}}></img></div></>}</>\r\n    )})} <br />\r\n    <button onClick={()=>{\r\n      SolveP();\r\n      setStatus(true);\r\n      console.log(status)\r\n      setMove(1)\r\n      }} disabled={status===true ? true : false}> Solve</button>\r\n    <button onClick={()=>{\r\n      setReset(!reset); \r\n      setMove(0)\r\n      setStatus(false);   \r\n      }} disabled={movement===0 && status!==true ? true : false}> Reset</button>  </div>\r\n  </div></>\r\n\r\n}\r\n\r\nfunction useKeyPress(targetKey) {\r\n  // State for keeping track of whether key is pressed\r\n  const [keyPressed, setKeyPressed] = React.useState(false);\r\n  // If pressed key is our target key then set to true\r\n  function downHandler({ key }) {\r\n    if (key === targetKey) {\r\n      setKeyPressed(true);\r\n    }\r\n  }\r\n  // If released key is our target key then set to false\r\n  const upHandler = ({ key }) => {\r\n    if (key === targetKey) {\r\n      setKeyPressed(false);\r\n    }\r\n  };\r\n  // Add event listeners\r\n  React.useEffect(() => {\r\n    window.addEventListener(\"keydown\", downHandler);\r\n    window.addEventListener(\"keyup\", upHandler);\r\n    // Remove event listeners on cleanup\r\n    return () => {\r\n      window.removeEventListener(\"keydown\", downHandler);\r\n      window.removeEventListener(\"keyup\", upHandler);\r\n    };\r\n  }, []); // Empty array ensures that effect is only run on mount and unmount\r\n  return keyPressed;\r\n}"]},"metadata":{},"sourceType":"module"}