{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\23703\\\\OneDrive\\\\\\u684C\\u9762\\\\exam\\\\src\\\\pages\\\\nav.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../App.css';\nimport logo from '../assets/logo.png';\nimport Typography from '@mui/material/Typography';\n\nfunction LeftNav() {\n  _s();\n\n  const navigate = useNavigate();\n  const pages = ['Home', 'Tictac', 'Tower', 'Snek'];\n  const pages1 = ['H', 'Ti', 'To', 'S'];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"left sideNav d-flex flex-column\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          style: {\n            height: '50px',\n            width: '50px',\n            margin: '15px',\n            top: '0px'\n          },\n          alt: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 42\n        }, this), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 7\n      }, this), window.innerWidth > 800 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pages.map((page, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => {\n            if ({\n              page\n            }.page === 'Home') {\n              navigate('/');\n            }\n\n            if ({\n              page\n            }.page === 'Blanko') {\n              navigate('/blanko');\n            }\n\n            if ({\n              page\n            }.page === 'Slido') {\n              navigate('/slido');\n            }\n\n            if ({\n              page\n            }.page === 'Tetro') {\n              navigate('/tetro');\n            }\n          },\n          children: {\n            page\n          }.page !== 'Tetro' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [page, \" \\xA0|\\xA0 \"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: page\n          }, void 0, false)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this))\n      }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: pages1.map((page, index) => /*#__PURE__*/_jsxDEV(\"p\", {\n          onClick: () => {\n            if ({\n              page\n            }.page === 'H') {\n              navigate('/');\n            }\n\n            if ({\n              page\n            }.page === 'B') {\n              navigate('/blanko');\n            }\n\n            if ({\n              page\n            }.page === 'S') {\n              navigate('/slido');\n            }\n\n            if ({\n              page\n            }.page === 'T') {\n              navigate('/tetro');\n            }\n          },\n          style: {\n            color: 'black',\n            display: 'inline-block'\n          },\n          textAlign: \"center\",\n          children: [\" \", {\n            page\n          }.page !== 'Tetro' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [page, \" \\xA0|\\xA0 \"]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: page\n          }, void 0, false), \" \"]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, this))\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n}\n\n_s(LeftNav, \"CzcTeTziyjMsSrAVmHuCCb6+Bfg=\", false, function () {\n  return [useNavigate];\n});\n\n_c = LeftNav;\nexport default LeftNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftNav\");","map":{"version":3,"sources":["C:/Users/23703/OneDrive/桌面/exam/src/pages/nav.js"],"names":["React","useNavigate","logo","Typography","LeftNav","navigate","pages","pages1","textAlign","height","width","margin","top","window","innerWidth","map","page","index","color","display"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../App.css';\r\nimport logo from '../assets/logo.png';\r\nimport Typography from '@mui/material/Typography';\r\nfunction LeftNav() {\r\n  const navigate = useNavigate();\r\n  const pages = ['Home', 'Tictac', 'Tower', 'Snek'];\r\n  const pages1 = ['H', 'Ti', 'To', 'S'];\r\n\r\n  return <>\r\n    <nav className=\"left sideNav d-flex flex-column\">\r\n      <div style={{textAlign:'center'}} ><img src={logo} style = {{height:'50px', width: '50px' , margin:'15px', top:'0px'}} alt=\"\"></img> </div>\r\n        {/* <ul style={{listStyleType:\"none\"}}>\r\n            <li>Home</li>\r\n            <li>Tictac</li>\r\n            <li>Tower</li>\r\n            <li>Snek</li>\r\n        </ul> */}\r\n        {window.innerWidth > 800\r\n        ? <>{pages.map((page, index) => (\r\n          <p key={index} \r\n          onClick={()=>{\r\n            if ({page}.page==='Home'){               \r\n              navigate('/');\r\n            }\r\n            if ({page}.page==='Blanko'){\r\n              navigate('/blanko');\r\n            }\r\n            if ({page}.page==='Slido'){\r\n              navigate('/slido');\r\n            }\r\n            if ({page}.page==='Tetro'){\r\n              navigate('/tetro');\r\n            }\r\n          }} >\r\n              {{page}.page !== 'Tetro' ? <>{page} &nbsp;|&nbsp; </> : <>{page}</> }\r\n          </p>\r\n        ))}</>\r\n        : <>{pages1.map((page, index) => (\r\n            <p key={index} \r\n            onClick={()=>{\r\n            if ({page}.page==='H'){               \r\n              navigate('/');\r\n            }\r\n            if ({page}.page==='B'){\r\n              navigate('/blanko');\r\n            }\r\n            if ({page}.page==='S'){\r\n              navigate('/slido');\r\n            }\r\n            if ({page}.page==='T'){\r\n              navigate('/tetro');\r\n            }\r\n            }} \r\n            style={{color: 'black', display:'inline-block'}} textAlign=\"center\"> {{page}.page !== 'Tetro' ? <>{page} &nbsp;|&nbsp; </> : <>{page}</> } </p>\r\n        ))}</>}\r\n    </nav>\r\n  </>\r\n\r\n}\r\nexport default LeftNav;"]},"metadata":{},"sourceType":"module"}