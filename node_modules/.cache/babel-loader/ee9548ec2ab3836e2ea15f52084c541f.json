{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\23703\\\\OneDrive\\\\\\u684C\\u9762\\\\exam\\\\src\\\\pages\\\\tictac.js\",\n    _s = $RefreshSig$();\n\nimport * as React from 'react';\nimport '../App.css'; //  The code is refer to the tictac example from the tutorial solution\n\nfunction Tictac() {\n  _s();\n\n  const defaultBoard = [['', '', ''], ['', '', ''], ['', '', '']];\n  const [board, setBoard] = React.useState(defaultBoard);\n  const [player, setPlayer] = React.useState('O');\n  const [winPlayer, setWinPlayer] = React.useState('');\n  const [click, numClick] = React.u;\n\n  const handleClick = (rowNum, colNum) => {\n    setCell(rowNum, colNum);\n    checkWin();\n  };\n\n  const setCell = (x, y) => {\n    const currPlayer = player;\n    const newBoard = { ...board\n    }; //[ ... board ]\n\n    newBoard[x][y] = currPlayer;\n    setBoard(newBoard);\n    setPlayer(player === 'X' ? 'O' : 'X');\n  };\n\n  const setWinCount = winPlayer => {\n    if (winPlayer === 'O') {\n      const curLeft = localStorage.getItem('X');\n      localStorage.setItem(\"X\", parseInt(curLeft) - 1);\n    }\n  };\n\n  const checkWin = () => {\n    const winningLines = [[[0, 0], [0, 1], [0, 2]], [[1, 0], [1, 1], [1, 2]], [[2, 0], [2, 1], [2, 2]], [[0, 0], [1, 0], [2, 0]], [[0, 1], [1, 1], [2, 1]], [[0, 2], [1, 2], [2, 2]], [[0, 0], [1, 1], [2, 2]], [[0, 2], [1, 1], [2, 0]]];\n\n    for (let line of winningLines) {\n      const [a, b, c] = line;\n\n      if (board[a[0]][a[1]] !== '' && board[a[0]][a[1]] === board[b[0]][b[1]] && board[b[0]][b[1]] === board[c[0]][c[1]]) {\n        //Game won\n        setWinPlayer(player === 'X' ? 'X' : 'O');\n        setWinCount(player);\n        alert(\"won le\");\n        return;\n      }\n    } // all filled\n\n\n    let no = Nowin();\n    console.log('no win', no);\n\n    if (no === true) {\n      alert('no body win');\n      setWinPlayer('N');\n    }\n  };\n\n  const Nowin = () => {\n    const temp = [...board];\n\n    for (let i = 0; i < temp.length; i++) {\n      for (let j = 0; j < temp[i].length; j++) {\n        console.log(i, j, temp);\n\n        if (temp[i][j] === '') {\n          return false;\n        }\n\n        if (i === 2 && j === 2) {\n          return true;\n        }\n      }\n    }\n  };\n\n  const color = {\n    'X': 'rgb(220,220,255',\n    'O': 'rgb(255,220,220)'\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container1\",\n      style: {\n        textAlign: 'center'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"basicBoard\",\n        children: Array.from({\n          length: 3\n        }).map((row, rowNum) => {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row\",\n            children: Array.from({\n              length: 3\n            }).map((cell, colNum) => {\n              return /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"cell\",\n                onClick: () => handleClick(rowNum, colNum),\n                style: {\n                  backgroundColor: board[rowNum][colNum] === '' ? color[player] : 'transparent'\n                },\n                children: board[rowNum][colNum]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        style: {\n          display: winPlayer === '' ? 'none' : 'flex'\n        },\n        children: [winPlayer === 'N' ? /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14pt'\n          },\n          children: \"No one wins\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 98\n        }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n          style: {\n            fontSize: '14pt'\n          },\n          children: [\" \", winPlayer, \" wins\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 145\n        }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 198\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"A total of X moves were complete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this)\n  }, void 0, false);\n}\n\n_s(Tictac, \"iQG+xygyg307GLZA1RK0p86Boww=\");\n\n_c = Tictac;\nexport default Tictac;\n\nvar _c;\n\n$RefreshReg$(_c, \"Tictac\");","map":{"version":3,"sources":["C:/Users/23703/OneDrive/桌面/exam/src/pages/tictac.js"],"names":["React","Tictac","defaultBoard","board","setBoard","useState","player","setPlayer","winPlayer","setWinPlayer","click","numClick","u","handleClick","rowNum","colNum","setCell","checkWin","x","y","currPlayer","newBoard","setWinCount","curLeft","localStorage","getItem","setItem","parseInt","winningLines","line","a","b","c","alert","no","Nowin","console","log","temp","i","length","j","color","textAlign","Array","from","map","row","cell","backgroundColor","display","fontSize"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\n\r\nimport '../App.css';\r\n//  The code is refer to the tictac example from the tutorial solution\r\nfunction Tictac() {\r\n  const defaultBoard =  [ [ '', '', '', ], \r\n                        [ '', '', '', ],\r\n                        [ '', '', '', ], ]\r\n  const [board, setBoard] = React.useState(defaultBoard); \r\n  const [player, setPlayer] = React.useState('O');\r\n  const [winPlayer, setWinPlayer] = React.useState(''); \r\n  const [click, numClick] = React.u\r\n\r\n  const handleClick = (rowNum, colNum) => {\r\n    setCell(rowNum, colNum);\r\n    checkWin();\r\n  }\r\n  const setCell = (x, y) => {\r\n    const currPlayer = player;\r\n    const newBoard = {...board}; //[ ... board ]\r\n    newBoard[x][y] = currPlayer; \r\n\r\n    setBoard(newBoard);\r\n    setPlayer(player === 'X'? 'O': 'X');\r\n  }\r\n\r\n  const setWinCount = (winPlayer) => {\r\n    if(winPlayer === 'O'){\r\n      const curLeft = localStorage.getItem('X')\r\n      localStorage.setItem(\"X\", parseInt(curLeft)-1);\r\n    }\r\n  }\r\n  const checkWin = () => {\r\n    const winningLines = [\r\n      [[0, 0], [0, 1], [0, 2]],\r\n      [[1, 0], [1, 1], [1, 2]],\r\n      [[2, 0], [2, 1], [2, 2]],\r\n      [[0, 0], [1, 0], [2, 0]],\r\n      [[0, 1], [1, 1], [2, 1]],\r\n      [[0, 2], [1, 2], [2, 2]],\r\n      [[0, 0], [1, 1], [2, 2]],\r\n      [[0, 2], [1, 1], [2, 0]],\r\n    ]\r\n\r\n    for (let line of winningLines) {\r\n      const [a, b, c] = line;\r\n      if (board[a[0]][a[1]] !== '' && board[a[0]][a[1]] === board[b[0]][b[1]] && board[b[0]][b[1]] === board[c[0]][c[1]]) {\r\n        //Game won\r\n        setWinPlayer(player === 'X' ? 'X' : 'O')\r\n        setWinCount(player);\r\n        alert(\"won le\");\r\n        return;\r\n      }\r\n    }\r\n\r\n    // all filled\r\n    let no = Nowin();\r\n    console.log('no win',no)\r\n    if (no=== true){\r\n      alert('no body win');\r\n      setWinPlayer('N')\r\n    }\r\n  }\r\n  const Nowin =()=>{\r\n    const temp = [...board]\r\n    for (let i = 0; i<temp.length;i++){\r\n      for (let j = 0; j<temp[i].length; j++){\r\n        console.log(i,j,temp)\r\n        if (temp[i][j]===''){\r\n          return false;\r\n        }\r\n        if (i===2 && j===2){\r\n          return true;\r\n        }\r\n      } \r\n    }\r\n  }\r\n\r\n\r\n  const color = {\r\n    'X':'rgb(220,220,255',\r\n    'O':'rgb(255,220,220)'\r\n  }\r\n\r\n  return <>\r\n  <div className='container1' style={{textAlign:'center'}}> \r\n    <div className='basicBoard'>\r\n      {Array.from({length: 3}).map((row, rowNum)  => {\r\n          return (\r\n            <div className='row'> \r\n              {Array.from({length: 3}).map((cell, colNum) => {\r\n                return (\r\n                <div \r\n                  className='cell'\r\n                  onClick={() => handleClick(rowNum, colNum)}\r\n                  style={{backgroundColor: board[rowNum][colNum]==='' ? color[player] : 'transparent'}}\r\n                > \r\n                  {board[rowNum][colNum]}\r\n                </div>\r\n                )\r\n              })}\r\n            </div>)\r\n        })}\r\n    </div>\r\n    <div className='info' style={{display: winPlayer==='' ? 'none' : 'flex'}}>{winPlayer==='N' ? <p style={{fontSize:'14pt'}}>No one wins</p> : <p style={{fontSize:'14pt'}}> {winPlayer} wins</p> } <br />\r\n    <p >A total of X moves were complete</p>\r\n    </div>\r\n  </div>\r\n  </>\r\n}\r\nexport default Tictac;"]},"metadata":{},"sourceType":"module"}